{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/views/Loopbar.vue?1170","webpack:///./src/components/beat-settings.vue?45a4","webpack:///./src/components/video-player.vue?52e8","webpack:///./src/App.vue?06c3","webpack:///./src/components/slider-input.vue?0635","webpack:///./src/App.vue","webpack:///./src/App.vue?97f5","webpack:///./src/registerServiceWorker.ts","webpack:///./src/views/Loopbar.vue","webpack:///./src/components/video-player.vue","webpack:///./src/components/video-player.vue?f44c","webpack:///./src/components/video-player.vue?272c","webpack:///./src/components/beat-settings.vue","webpack:///./src/components/number-input.vue","webpack:///./src/components/number-input.vue?8cf9","webpack:///./src/components/number-input.vue?a4ff","webpack:///./src/components/slider-input.vue","webpack:///./src/components/slider-input.vue?9d73","webpack:///./src/components/slider-input.vue?db55","webpack:///./src/logic/beatMeter.ts","webpack:///./src/components/beat-settings.vue?dd79","webpack:///./src/components/beat-settings.vue?9d21","webpack:///./src/logic/range.ts","webpack:///./src/logic/time.ts","webpack:///./src/views/Loopbar.vue?1806","webpack:///./src/views/Loopbar.vue?4b28","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/components/number-input.vue?16de"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","script","render","ready","console","log","registered","cached","updatefound","updated","offline","error","class","ref","type","accept","videoFileSelected","videoFile","file","currentTimeDisplay","$event","videoPaused","playbackRate","bar","currentTimeIndicator","playbackRatePercent","min","max","unit","toggleLoop","loopButtonText","range","start","loopStartToNowClicked","duration","end","loopEndToNowClicked","getCurrentTime","customBpm","customOffset","bpm","offset","player","play","id","src","source","controls","$emit","rateChanged","props","File","Number","default","emits","setup","ctx","fileUrl","URL","createObjectURL","newRate","lastCurrentTime","updateCurrentTime","newTime","currentTime","emit","requestAnimationFrame","methods","this","seekToSecond","second","pause","__scopeId","beatIndicator","bpmDisplay","beatInput","disabled","beatMeter","needsMoreBeats","tappedBeat","meterBpmDisplay","meterOffsetDisplay","resetClicked","customOffsetPercent","decrement","inputmode","inputText","newInput","target","increment","modelValue","required","formatValue","newValue","parsed","parseInput","input","parseFloat","isNaN","toString","toFixed","newTextInput","newSliderInput","step","modelValueDisplay","newModelValue","$_updateModelValue","Math","stepDecimals","beats","period_","offset_","calculate","sortNumerically","calculatePeriod","calculateOffset","period","bpmFromPeriod","periodFromBpm","distancesWithOutliers","getDistancesBetweenBeats","distances","removeOutliers","averagePeriod","reduce","accu","next","Array","first","distance","offsetsWithOutliers","map","beat","offsets","averageOffset","values","denominator","numerator","highestIndex","floor","last","ceil","sort","a","b","components","NumberInput","SliderInput","Function","set","newOffsetPercent","newPropBpm","newPropOffset","newBpm","newOffset","clap","offsetSeconds","beatPhase","offsetDisplay","offsetPercent","addBeats","reset","start_","duration_","oldValue","newStart","sanitizeInput","newDuration","newEnd","Range","timecodeFromSecond","elapsedSeconds","elapsedMinutes","elapsedHours","hours","padStart","minutes","seconds","fractionOfSecond","timecode","VideoPlayer","BeatSettings","videoFileInput","newRatePercent","saveSettingsForFile","settings","localStorage","setItem","JSON","stringify","loadSettingsForFile","stored","getItem","parse","newFile","isLooping","playLoopStart","startInSeconds","secondFromBar","nowIsLooping","nowCurrentTimeDisplay","currentRange","tolerance","startTime","endTime","insideOfLoop","files","stopLoop","startLoop","routes","path","component","Loopbar","router","history","state","mutations","actions","App","use","store","mount"],"mappings":"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","file":"js/app.03e7c597.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/loopbar/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Loopbar.vue?vue&type=style&index=0&id=f664685e&scoped=true&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./beat-settings.vue?vue&type=style&index=0&id=27220108&scoped=true&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./video-player.vue?vue&type=style&index=0&id=0d1c7e3c&scoped=true&lang=css\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./slider-input.vue?vue&type=style&index=0&id=46db459e&scoped=true&lang=scss\"","<template>\n  <router-view/>\n</template>\n\n<style lang=\"scss\">\n* {\n  box-sizing: border-box;\n}\n\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n}\n\nbutton {\n  box-sizing: border-box;\n\n  padding: 0.5rem;\n  border-radius: 0.1rem;\n  border: 1px solid black;\n  background: none;\n\n  &:hover, &:focus {\n    cursor: pointer;\n    background: hsla(0, 0%, 0%, 0.1);\n  }\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=61d21448\"\nconst script = {}\n\nimport \"./App.vue?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","<template>\n  <div class=\"root-container\">\n    <label>\n      Choose a video file\n      <input ref=\"videoFileInput\" type=\"file\" accept=\"video/*\" @change=\"videoFileSelected\"/>\n    </label>\n    <div class=\"control-container\" v-if=\"videoFile !== null\">\n      <div class=\"video-area\">\n        <VideoPlayer ref=\"player\" :file=\"videoFile\" @updated:time-display=\"currentTimeDisplay = $event\" @paused=\"videoPaused\" :playbackRate=\"playbackRate\"></VideoPlayer>\n        <span class=\"currentTime\">\n          Beat #{{bar}} ({{currentTimeIndicator}})\n        </span>\n        <div class=\"rate-settings\">\n          <SliderInput class=\"rate-slider\" v-model=\"playbackRatePercent\" :min=\"25\" :max=\"300\">\n            Playback rate\n            <template v-slot:unit> %</template>\n          </SliderInput>\n          <div class=\"rate-buttons\">\n            <button @click=\"playbackRate = 0.25\">25 %</button>\n            <button @click=\"playbackRate = 0.5\">50 %</button>\n            <button @click=\"playbackRate = 0.75\">75 %</button>\n            <button @click=\"playbackRate = 1\">100 %</button>\n            <button @click=\"playbackRate = 1.5\">150 %</button>\n            <button @click=\"playbackRate = 2\">200 %</button>\n          </div>\n        </div>\n      </div>\n      <div class=\"loop-area\">\n        <button @click=\"toggleLoop()\">{{loopButtonText}}</button>\n        <div class=\"loop-settings\">\n          <div class=\"input-with-button\">\n            <NumberInput v-model=\"range.start\" class=\"narrow-input\">from</NumberInput>\n            <button @click=\"loopStartToNowClicked()\">set to now</button>\n          </div>\n          <NumberInput v-model=\"range.duration\" class=\"narrow-input\">for duration</NumberInput>\n          <div class=\"input-with-button\">\n            <NumberInput v-model=\"range.end\" class=\"narrow-input\">to</NumberInput>\n            <button @click=\"loopEndToNowClicked()\">set to now</button>\n          </div>\n        </div>\n      </div>\n      <BeatSettings class=\"beat-settings\" :currentTimeDisplay=\"currentTimeDisplay\" :getCurrentTime=\"getCurrentTime\" :customBpm=\"customBpm\" :customOffset=\"customOffset\" @update:bpm=\"bpm = $event\" @update:offset=\"offset = $event\" @start-play=\"player.play()\"></BeatSettings>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, reactive, Ref, ref, watch } from 'vue'\n\nimport VideoPlayer from '@/components/video-player.vue'\nimport BeatSettings from '@/components/beat-settings.vue'\nimport NumberInput from '@/components/number-input.vue'\nimport SliderInput from '@/components/slider-input.vue'\n\nimport { Range } from '@/logic/range'\nimport { timecodeFromSecond } from '@/logic/time'\nimport { BeatMeter, periodFromBpm } from '@/logic/beatMeter'\n\nexport default defineComponent({\n  components: {\n    VideoPlayer,\n    SliderInput,\n    NumberInput,\n    BeatSettings\n  },\n  setup () {\n    const videoFileInput = ref<HTMLInputElement>(null!)\n    const videoFile = ref<File | null>(null)\n\n    const player = ref<typeof VideoPlayer>(null!)\n    const currentTimeDisplay = ref(0)\n    const currentTimeIndicator = computed(() => {\n      return timecodeFromSecond(currentTimeDisplay.value)\n    })\n    const playbackRate = ref(1)\n    const playbackRatePercent = computed({\n      get: () => playbackRate.value * 100,\n      set: newRatePercent => {\n        playbackRate.value = newRatePercent / 100\n      }\n    })\n\n    const bpm = ref(120)\n    const period = computed(() => periodFromBpm(bpm.value))\n    const offset = ref(0)\n    const bar = computed(() => {\n      if (period.value > 0) {\n        const offsetSeconds = offset.value * period.value\n        return Math.floor((currentTimeDisplay.value - offsetSeconds) / period.value)\n      } else {\n        return 0\n      }\n    })\n    const customBpm = ref(bpm.value)\n    const customOffset = ref(offset.value)\n\n    const saveSettingsForFile = (file: File, settings: { bpm: number, offset: number }) => {\n      localStorage.setItem(file.name, JSON.stringify(settings))\n    }\n    const loadSettingsForFile = (file: File): { bpm: number, offset: number } | null => {\n      const stored = localStorage.getItem(file.name)\n      if (stored !== null) {\n        return JSON.parse(stored)\n      } else {\n        return null\n      }\n    }\n    watch([bpm, offset], ([newBpm, newOffset]) => {\n      if (videoFile.value !== null) {\n        saveSettingsForFile(videoFile.value, { bpm: newBpm, offset: newOffset })\n      }\n    })\n    watch(videoFile, (newFile) => {\n      if (newFile !== null) {\n        const stored =loadSettingsForFile(newFile)\n        if (stored !== null) {\n          customBpm.value = stored.bpm\n          customOffset.value = stored.offset\n        }\n      }\n    })\n\n    const range = reactive(new Range(0, 1))\n    const isLooping = ref(false)\n    const loopButtonText = computed(() => {\n      if (!isLooping.value) {\n        return 'Start loop'\n      } else {\n        return 'Stop loop'\n      }\n    })\n\n    const playLoopStart = () => {\n      const startInSeconds = secondFromBar(range.start, period.value, offset.value)\n      player.value.seekToSecond(startInSeconds)\n      player.value.play()\n    }\n    watch([isLooping, currentTimeDisplay, range] as [Ref<boolean>, Ref<DOMHighResTimeStamp>, Range], ([nowIsLooping, nowCurrentTimeDisplay, currentRange]) => {\n      // When seeking to a time, the player might not be able to hit that time exactly and may choose a slightly earlier time.\n      // To prevent that we get stuck in a loop, we do not restart the loop if we are very close to the start time.\n      const tolerance = 0.1\n      const startTime = secondFromBar(currentRange.start, period.value, offset.value) - tolerance\n      const endTime = secondFromBar(currentRange.end, period.value, offset.value)\n      \n      const insideOfLoop = startTime < nowCurrentTimeDisplay && nowCurrentTimeDisplay < endTime\n      if (nowIsLooping && !insideOfLoop) {\n        playLoopStart()\n      }\n    })\n\n    return {\n      videoFileInput,\n      videoFile,\n      player,\n      currentTimeDisplay,\n      currentTimeIndicator,\n      playbackRate,\n      playbackRatePercent,\n      bpm,\n      period,\n      offset,\n      customBpm,\n      customOffset,\n      bar,\n      isLooping,\n      range,\n      loopButtonText\n    }\n  },\n  methods: {\n    videoFileSelected () {\n      const files = this.videoFileInput.files\n      if (files === null || files.length === 0) {\n        return\n      }\n\n      const newFile = files[0]\n      if (newFile != null) {\n        this.videoFile = newFile\n      }\n    },\n    getCurrentTime () {\n      if (this.player !== null) {\n        return this.player.getCurrentTime()\n      } else {\n        return 0\n      }\n    },\n    toggleLoop () {\n      if (!this.isLooping) {\n        this.startLoop()\n      } else {\n        this.stopLoop()\n      }\n    },\n    startLoop () {\n      this.isLooping = true\n    },\n    stopLoop () {\n      this.isLooping = false\n    },\n    videoPaused () {\n      this.stopLoop()\n    },\n    loopStartToNowClicked () {\n      this.range.start = this.bar\n    },\n    loopEndToNowClicked () {\n      this.range.end = this.bar\n    },\n  }\n})\n\nfunction secondFromBar(bar: number, period: number, offset: number): number {\n  const offsetSeconds = offset * period\n  return bar * period + offsetSeconds\n}\n</script>\n\n<style scoped lang=\"scss\">\n.root-container {\n  max-width: 32rem;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 0.5rem;\n}\n\n.control-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 2rem;\n}\n\nlabel {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\n.video-area {\n display: flex;\n flex-direction: column;\n align-items: flex-start;\n gap: 0.5rem;\n}\n\n.rate-settings, .loop-area, .beat-settings {\n  border: 1px solid black;\n  border-radius: 0.3rem;\n  padding: 1rem;\n}\n\n.rate-settings {\n  width: 100%;\n}\n\n.rate-slider {\n  width: 100%;\n}\n\n.rate-buttons {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n}\n\n.currentTime {\n  font-family: monospace;\n  font-size: 1.2rem;\n}\n\n.loop-area {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 0.5rem;\n}\n\n.loop-settings {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  gap: 1rem;\n\n  .narrow-input {\n    max-width: 8rem;\n  }\n\n  .input-with-button {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n.missing-beats {\n  font-style: italic;\n}\n</style>\n","<template>\n  <video ref=\"player\" id=\"player\" :src=\"source\" controls @playing=\"$emit('started-playing')\" @pause=\"$emit('paused')\" @ratechange=\"rateChanged()\"></video>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, ref, toRef, watch } from 'vue'\n\nexport default defineComponent({\n  props: {\n    file: {\n      type: File,\n    },\n    playbackRate: {\n      type: Number,\n      default: 1,\n    },\n  },\n  emits: [\n    'updated:time-display',\n    'updated:playbackRate',\n    'started-playing',\n    'paused'\n  ],\n  setup (props, ctx) {\n    const player = ref<HTMLVideoElement>(null!)\n\n    const source = computed(() => {\n      if (props.file != null) {\n        const fileUrl = URL.createObjectURL(props.file)\n        return fileUrl\n      } else {\n        return null\n      }\n    })\n\n    watch(toRef(props, 'playbackRate'), newRate => {\n      player.value.playbackRate = newRate\n    })\n\n    let lastCurrentTime: DOMHighResTimeStamp | null = null\n    const updateCurrentTime = () => {\n      const newTime = player.value.currentTime\n      if (lastCurrentTime !== newTime) {\n        lastCurrentTime = newTime\n        ctx.emit('updated:time-display', newTime)\n      }\n      requestAnimationFrame(updateCurrentTime)\n    }\n    onMounted(updateCurrentTime)\n\n    return {\n      player,\n      source,\n    }\n  },\n  methods: {\n    getCurrentTime () {\n      return this.player.currentTime\n    },\n    seekToSecond (second: number) {\n      this.player.currentTime = second\n    },\n    play () {\n      this.player.play()\n    },\n    pause () {\n      this.player.pause()\n    },\n    rateChanged () {\n      const newRate = this.player.playbackRate\n      this.$emit('updated:playbackRate', newRate)\n    }\n  }\n})\n</script>\n\n<style scoped>\n  label {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .video-container {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.75rem;\n  }\n\n  #player {\n    max-width: 100%;\n  }\n</style>\n","\nimport { computed, defineComponent, onMounted, ref, toRef, watch } from 'vue'\n\nexport default defineComponent({\n  props: {\n    file: {\n      type: File,\n    },\n    playbackRate: {\n      type: Number,\n      default: 1,\n    },\n  },\n  emits: [\n    'updated:time-display',\n    'updated:playbackRate',\n    'started-playing',\n    'paused'\n  ],\n  setup (props, ctx) {\n    const player = ref<HTMLVideoElement>(null!)\n\n    const source = computed(() => {\n      if (props.file != null) {\n        const fileUrl = URL.createObjectURL(props.file)\n        return fileUrl\n      } else {\n        return null\n      }\n    })\n\n    watch(toRef(props, 'playbackRate'), newRate => {\n      player.value.playbackRate = newRate\n    })\n\n    let lastCurrentTime: DOMHighResTimeStamp | null = null\n    const updateCurrentTime = () => {\n      const newTime = player.value.currentTime\n      if (lastCurrentTime !== newTime) {\n        lastCurrentTime = newTime\n        ctx.emit('updated:time-display', newTime)\n      }\n      requestAnimationFrame(updateCurrentTime)\n    }\n    onMounted(updateCurrentTime)\n\n    return {\n      player,\n      source,\n    }\n  },\n  methods: {\n    getCurrentTime () {\n      return this.player.currentTime\n    },\n    seekToSecond (second: number) {\n      this.player.currentTime = second\n    },\n    play () {\n      this.player.play()\n    },\n    pause () {\n      this.player.pause()\n    },\n    rateChanged () {\n      const newRate = this.player.playbackRate\n      this.$emit('updated:playbackRate', newRate)\n    }\n  }\n})\n","import { render } from \"./video-player.vue?vue&type=template&id=0d1c7e3c&scoped=true&bindings={}\"\nimport script from \"./video-player.vue?vue&type=script&lang=ts\"\nexport * from \"./video-player.vue?vue&type=script&lang=ts\"\n\nimport \"./video-player.vue?vue&type=style&index=0&id=0d1c7e3c&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-0d1c7e3c\"\n\nexport default script","<template>\n  <div class=\"beat-settings\">\n    <div class=\"visualization\">\n      <span class=\"beat-indicator\">{{beatIndicator}}</span>\n      {{bpmDisplay}} bpm\n    </div>\n    <div class=\"settings-area\">\n      <div class=\"meter setting\">\n        <div class=\"header\">\n          <label>\n            <input type=\"radio\" name=\"beatInput\" value=\"meter\" v-model=\"beatInput\" :disabled=\"beatMeter.needsMoreBeats\"/>\n            <div>\n              <span :class=\"{ disabled: beatMeter.needsMoreBeats }\">Use tap settings</span>\n              <span v-if=\"beatMeter.needsMoreBeats\"> (unavailable until set)</span>\n            </div>\n          </label>\n        </div>\n        <div class=\"inputs\">\n          <button @mousedown=\"tappedBeat\">Tap me to the beat</button>\n          <div class=\"bpm-display\">\n            <span v-if=\"beatMeter.needsMoreBeats\" class=\"missing-beats\">\n              Set the beats per minute (bpm) by tapping the button.\n            </span>\n            <span v-else class=\"bpm\">\n              {{meterBpmDisplay}} bpm (offset {{meterOffsetDisplay}})\n            </span>\n          </div>\n          <button @click=\"resetClicked\">Reset bpm</button>\n        </div>\n      </div>\n      <div class=\"custom setting\">\n        <div class=\"header\">\n          <label>\n            <input type=\"radio\" name=\"beatInput\" value=\"custom\" v-model=\"beatInput\"/>\n            Use custom settings\n          </label>\n        </div>\n        <div class=\"inputs\">\n          <NumberInput v-model=\"customBpm\">Beats per minute (bpm)</NumberInput>\n          <SliderInput v-model=\"customOffsetPercent\" :min=\"-50\" :max=\"50\">\n            Offset\n            <template v-slot:unit> % of bpm</template>\n          </SliderInput>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, reactive, ref, toRef, watch } from 'vue'\n\nimport NumberInput from '@/components/number-input.vue'\nimport SliderInput from '@/components/slider-input.vue'\n\nimport { BeatMeter, periodFromBpm } from '@/logic/beatMeter'\n\nexport default defineComponent({\n  components: {\n    NumberInput,\n    SliderInput\n  },\n  props: {\n    customBpm: {\n      type: Number,\n      required: true\n    },\n    customOffset: {\n      type: Number,\n      required: true\n    },\n    currentTimeDisplay: {\n      type: Number,\n      required: true,\n    },\n    getCurrentTime: {\n      type: Function as PropType<() => DOMHighResTimeStamp>,\n      required: true\n    }\n  },\n  emits: [\n    'update:bpm',\n    'update:offset',\n    'start-play'\n  ],\n  setup (props, ctx) {\n    const beatInput = ref('custom')\n    const customBpm = ref(props.customBpm)\n    const customOffset = ref(props.customOffset)\n    const customOffsetPercent = computed({\n      get: () => {\n        return customOffset.value * 100\n      },\n      set: (newOffsetPercent: number) => {\n        customOffset.value = newOffsetPercent / 100\n      }\n    })\n\n    watch(toRef(props, 'customBpm'), newPropBpm => {\n      if (newPropBpm !== customBpm.value) {\n        customBpm.value = newPropBpm\n      }\n    })\n    watch(toRef(props, 'customOffset'), newPropOffset => {\n      if (newPropOffset !== customOffset.value) {\n        customOffset.value = newPropOffset\n      }\n    })\n    watch([customBpm, customOffset], () => {\n      beatInput.value = 'custom'\n    })\n    \n    const beatMeter = reactive(new BeatMeter())\n    // We cannot watch the beatMeter, because tapping a button might not change the beat settings,\n    // and then the watch hook will not be triggered.\n    // Instead we react on all the button presses in this section.\n\n    const period = computed(() => {\n      if (beatInput.value === 'meter') {\n        return beatMeter.period\n      } else {\n        return periodFromBpm(customBpm.value)\n      }\n    })\n    const bpm = computed(() => {\n      if (beatInput.value === 'meter') {\n        return beatMeter.bpm\n      } else {\n        return customBpm.value\n      }\n    })\n    const offset = computed(() => {\n      if (beatInput.value === 'meter') {\n        return beatMeter.offset\n      } else {\n        return customOffset.value\n      }\n    })\n\n    watch(bpm, (newBpm) => ctx.emit('update:bpm', newBpm))\n    watch(offset, (newOffset) => ctx.emit('update:offset', newOffset))\n\n    const clap = computed(() => {\n      const offsetSeconds = offset.value * period.value\n      const beatPhase = (props.currentTimeDisplay - offsetSeconds) % period.value\n      // Only clap for 25 % of the beat.\n      return (beatPhase / period.value) < 0.25\n    })\n    const beatIndicator = computed(() => {\n      if (clap.value) {\n        return '👏'\n      } else {\n        return '👐'\n      }\n    })\n\n    const meterBpmDisplay = computed(() => beatMeter.bpm.toFixed(1))\n    const meterOffsetDisplay = computed(() => `${(beatMeter.offset * 100).toFixed(0)} %`)\n\n    const bpmDisplay = computed(() => bpm.value.toFixed(1))\n    const offsetDisplay = computed(() => {\n      const offsetPercent = offset.value * 100\n      return `${offsetPercent.toFixed(0)} %`\n    })\n\n    return {\n      customBpm,\n      customOffset,\n      customOffsetPercent,\n      meterBpmDisplay,\n      meterOffsetDisplay,\n      bpmDisplay,\n      offsetDisplay,\n      beatMeter,\n      beatIndicator,\n      beatInput,\n    }\n  },\n  methods: {\n    tappedBeat () {\n      this.$emit('start-play')\n      this.beatMeter.addBeats(this.getCurrentTime())\n\n      if (!this.beatMeter.needsMoreBeats) {\n        this.beatInput = 'meter'\n      }\n    },\n    resetClicked () {\n      this.beatMeter.reset()\n      this.beatInput = 'custom'      \n    },\n  }\n})\n</script>\n\n<style scoped lang=\"scss\">\n  label {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n\n    input[type=\"radio\"] {\n      margin-inline-end: 0.5em;\n    }\n  }\n\n  .disabled {\n    color: hsl(0, 0%, 50%);\n  }\n\n  .beat-settings {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1em;\n  }\n\n  .settings-area {\n    align-self: stretch;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(10em, 1fr));\n    gap: 1rem;\n    align-items: flex-start;\n  }\n\n  .setting {\n    padding: 0.5em;\n    border: 1px solid black;\n    border-radius: 0.1em;\n  }\n\n  .header {\n    margin-block-end: 0.5em;\n  }\n\n  .inputs {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n\n  .meter {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5em;\n  }\n\n  .bpm-display {\n    display: inline-block;\n  }\n\n  .beat-indicator {\n    display: inline-block;\n    width: 1.5em;\n  }\n\n  .missing-beats {\n    font-style: italic;\n  }\n</style>\n","<template>\n  <div class=\"number-input\">\n    <button class=\"first-button\" @click=\"decrement\">⬅️</button>\n    <label>\n      <div class=\"label\">\n        <slot></slot>\n      </div>\n      <input class=\"input\" type=\"text\" inputmode=\"decimal\" :value=\"inputText\" @change=\"newInput($event.target.value)\"/>\n    </label>\n    <button class=\"second-button\" @click=\"increment\">➡️</button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, ref, toRefs } from 'vue'\n\nexport default defineComponent({\n  props: {\n    modelValue: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: [\n    'update:modelValue'\n  ],\n  setup (props) {\n    const { modelValue } = toRefs(props)\n\n    const inputText = ref(formatValue(modelValue.value))\n\n    watch(modelValue, (newValue) => {\n      const parsed = parseInput(inputText.value)\n      if (parsed != null && parsed !== newValue) {\n        inputText.value = formatValue(newValue)\n      }\n    })\n\n    return {\n      inputText\n    }\n  },\n  methods: {\n    newInput (input: string) {\n      this.inputText = input\n\n      const parsed = parseInput(input)\n      if (parsed != null) {\n        this.$emit('update:modelValue', parsed)\n      }\n    },\n    increment () {\n      this.$emit('update:modelValue', this.modelValue + 1)\n    },\n    decrement () {\n      this.$emit('update:modelValue', this.modelValue - 1)\n    }\n  }\n})\n\nfunction parseInput (input: string): number | null {\n  const parsed = Number.parseFloat(input)\n  if (!isNaN(parsed)) {\n    return parsed\n  } else {\n    return null\n  }\n}\n\nfunction formatValue (value: number): string {\n  if (value % 1 === 0) { // if it is a whole number\n    return value.toString()\n  } else {\n    return value.toFixed(2)\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n  .number-input {\n    display: grid;\n    grid-template-areas:\n      \"label label label\"\n      \"first input second\";\n  }\n\n  .label {\n    grid-area: label;\n  }\n\n  .first-button {\n    grid-area: first;\n  }\n\n  .input {\n    grid-area: input;\n  }\n\n  .second-button {\n    grid-area: second;\n  }\n\n  label {\n    display: contents;\n  }\n\n  input {\n    padding-inline: 0.5rem;\n    width: 100%;\n    min-width: 2em;\n  }\n\n  button {\n    padding: 0.2rem;\n  }\n</style>\n","\nimport { defineComponent, watch, ref, toRefs } from 'vue'\n\nexport default defineComponent({\n  props: {\n    modelValue: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: [\n    'update:modelValue'\n  ],\n  setup (props) {\n    const { modelValue } = toRefs(props)\n\n    const inputText = ref(formatValue(modelValue.value))\n\n    watch(modelValue, (newValue) => {\n      const parsed = parseInput(inputText.value)\n      if (parsed != null && parsed !== newValue) {\n        inputText.value = formatValue(newValue)\n      }\n    })\n\n    return {\n      inputText\n    }\n  },\n  methods: {\n    newInput (input: string) {\n      this.inputText = input\n\n      const parsed = parseInput(input)\n      if (parsed != null) {\n        this.$emit('update:modelValue', parsed)\n      }\n    },\n    increment () {\n      this.$emit('update:modelValue', this.modelValue + 1)\n    },\n    decrement () {\n      this.$emit('update:modelValue', this.modelValue - 1)\n    }\n  }\n})\n\nfunction parseInput (input: string): number | null {\n  const parsed = Number.parseFloat(input)\n  if (!isNaN(parsed)) {\n    return parsed\n  } else {\n    return null\n  }\n}\n\nfunction formatValue (value: number): string {\n  if (value % 1 === 0) { // if it is a whole number\n    return value.toString()\n  } else {\n    return value.toFixed(2)\n  }\n}\n","import { render } from \"./number-input.vue?vue&type=template&id=4ad62136&scoped=true&bindings={}\"\nimport script from \"./number-input.vue?vue&type=script&lang=ts\"\nexport * from \"./number-input.vue?vue&type=script&lang=ts\"\n\nimport \"./number-input.vue?vue&type=style&index=0&id=4ad62136&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-4ad62136\"\n\nexport default script","<template>\n  <div>\n    <label>\n      <slot></slot>\n      <div class=\"inputs\">\n        <div><input type=\"text\" inputmode=\"decimal\" :value=\"inputText\" @change=\"newTextInput($event.target.value)\"/><span><slot name=\"unit\"></slot></span></div>\n        <input type=\"range\" :value=\"modelValue\" @input=\"newSliderInput($event.target.value)\" :min=\"min\" :max=\"max\"/>\n      </div>\n    </label>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, ref, toRefs, computed } from 'vue'\n\nexport default defineComponent({\n  props: {\n    modelValue: {\n      type: Number,\n      required: true\n    },\n    min: {\n      type: Number,\n      default: 0,\n    },\n    max: {\n      type: Number,\n      default: 100,\n    },\n    step: {\n      type: Number,\n      default: 1,\n    },\n  },\n  emits: [\n    'update:modelValue'\n  ],\n  setup (props, ctx) {\n    const { modelValue } = toRefs(props)\n\n    // The text input needs its own state, since it might contain an invalid number.\n    // In that case we want to still store the last correct number in `modelValue`.\n    const inputText = ref(formatValue(modelValue.value, props.step))\n\n    const modelValueDisplay = computed(() => modelValue.value.toFixed(0))\n\n    watch(modelValue, (newValue) => {\n      // Only update the text input if the modelValue has changed incompatibly.\n      const parsed = parseInput(inputText.value)\n      if (parsed != null && parsed !== newValue) {\n        inputText.value = formatValue(newValue, props.step)\n      }\n    })\n\n    return {\n      inputText,\n      modelValueDisplay\n    }\n  },\n  methods: {\n    newTextInput (input: string) {\n      this.inputText = input\n\n      const parsed = parseInput(input)\n      if (parsed != null) {\n        this.$emit('update:modelValue', parsed)\n      }\n    },\n    newSliderInput (input: string) {\n      const parsed = parseInput(input)\n      if (parsed != null) {\n        this.$emit('update:modelValue', parsed)\n      }\n    },\n    increment () {\n      const newModelValue = this.modelValue + 1\n      this.$_updateModelValue(newModelValue)\n    },\n    decrement () {\n      const newModelValue = this.modelValue - 1\n      this.$_updateModelValue(newModelValue)\n    },\n    $_updateModelValue(newValue: number) {\n      const newValueBounded = Math.max(this.min, Math.min(this.max, newValue))\n      if (newValue !== this.modelValue) {\n        this.$emit('update:modelValue', newValue)\n      }\n    }\n  }\n})\n\nfunction parseInput (input: string): number | null {\n  const parsed = Number.parseFloat(input)\n  if (!isNaN(parsed)) {\n    return parsed\n  } else {\n    return null\n  }\n}\n\nfunction formatValue (value: number, step: number): string {\n  const stepDecimals = step % 1\n  if (stepDecimals === 0) {\n    return value.toFixed(0)\n  } else {\n    return value.toFixed(2)\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n  label {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n\n    input {\n      width: 100%;\n    }\n  }\n\n  .inputs {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n\n    button {\n      padding: 0.2rem;\n    }\n\n    input[type=\"text\"] {\n      text-align: end;\n      padding-inline: 0.5rem;\n      max-width: 4rem;\n    }\n  }\n</style>\n","\nimport { defineComponent, watch, ref, toRefs, computed } from 'vue'\n\nexport default defineComponent({\n  props: {\n    modelValue: {\n      type: Number,\n      required: true\n    },\n    min: {\n      type: Number,\n      default: 0,\n    },\n    max: {\n      type: Number,\n      default: 100,\n    },\n    step: {\n      type: Number,\n      default: 1,\n    },\n  },\n  emits: [\n    'update:modelValue'\n  ],\n  setup (props, ctx) {\n    const { modelValue } = toRefs(props)\n\n    // The text input needs its own state, since it might contain an invalid number.\n    // In that case we want to still store the last correct number in `modelValue`.\n    const inputText = ref(formatValue(modelValue.value, props.step))\n\n    const modelValueDisplay = computed(() => modelValue.value.toFixed(0))\n\n    watch(modelValue, (newValue) => {\n      // Only update the text input if the modelValue has changed incompatibly.\n      const parsed = parseInput(inputText.value)\n      if (parsed != null && parsed !== newValue) {\n        inputText.value = formatValue(newValue, props.step)\n      }\n    })\n\n    return {\n      inputText,\n      modelValueDisplay\n    }\n  },\n  methods: {\n    newTextInput (input: string) {\n      this.inputText = input\n\n      const parsed = parseInput(input)\n      if (parsed != null) {\n        this.$emit('update:modelValue', parsed)\n      }\n    },\n    newSliderInput (input: string) {\n      const parsed = parseInput(input)\n      if (parsed != null) {\n        this.$emit('update:modelValue', parsed)\n      }\n    },\n    increment () {\n      const newModelValue = this.modelValue + 1\n      this.$_updateModelValue(newModelValue)\n    },\n    decrement () {\n      const newModelValue = this.modelValue - 1\n      this.$_updateModelValue(newModelValue)\n    },\n    $_updateModelValue(newValue: number) {\n      const newValueBounded = Math.max(this.min, Math.min(this.max, newValue))\n      if (newValue !== this.modelValue) {\n        this.$emit('update:modelValue', newValue)\n      }\n    }\n  }\n})\n\nfunction parseInput (input: string): number | null {\n  const parsed = Number.parseFloat(input)\n  if (!isNaN(parsed)) {\n    return parsed\n  } else {\n    return null\n  }\n}\n\nfunction formatValue (value: number, step: number): string {\n  const stepDecimals = step % 1\n  if (stepDecimals === 0) {\n    return value.toFixed(0)\n  } else {\n    return value.toFixed(2)\n  }\n}\n","import { render } from \"./slider-input.vue?vue&type=template&id=46db459e&scoped=true&bindings={}\"\nimport script from \"./slider-input.vue?vue&type=script&lang=ts\"\nexport * from \"./slider-input.vue?vue&type=script&lang=ts\"\n\nimport \"./slider-input.vue?vue&type=style&index=0&id=46db459e&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-46db459e\"\n\nexport default script","export class BeatMeter {\n  constructor (\n        private beats: number[] = []\n  ) {\n    this.calculate(beats)\n  }\n\n    private period_ = 0\n    public get period () {\n      return this.period_\n    }\n\n    public get bpm () {\n      if (this.period === 0) {\n        return 0\n      } else {\n        return bpmFromPeriod(this.period)\n      }\n    }\n\n    private offset_ = 0\n    public get offset () {\n      return this.offset_\n    }\n\n    public get needsMoreBeats () {\n      return this.beats.length < 2\n    }\n\n    public addBeats (...offsetsInSeconds: number[]) {\n      this.beats.push(...offsetsInSeconds)\n      sortNumerically(this.beats)\n\n      this.calculate(this.beats)\n    }\n\n    public reset () {\n      this.beats = []\n      this.calculate(this.beats)\n    }\n\n    private calculate (beats: number[]) {\n      this.period_ = calculatePeriod(beats)\n      this.offset_ = calculateOffset(beats, this.period)\n    }\n}\n\nexport function bpmFromPeriod(period: number): number {\n  return 60 / period\n}\n\nexport function periodFromBpm(bpm: number): number {\n  return 60 / bpm\n}\n\nfunction calculatePeriod (beats: number[]): number {\n  if (beats.length <= 1) {\n    return 0\n  }\n\n  const distancesWithOutliers = sortNumerically(getDistancesBetweenBeats(beats))\n  const distances = removeOutliers(distancesWithOutliers)\n\n  // Remove outliers for better error tolerance.\n  const averagePeriod = distances.reduce((accu, next) => accu + next, 0) / distances.length\n\n  return averagePeriod\n}\n\n/**\n * @param beats A non-empty, sorted list of beat timestamps in seconds, smallest first.\n */\nfunction getDistancesBetweenBeats (beats: number[]): number[] {\n  const distances = new Array(beats.length - 1)\n\n  // Iterate over pairs of beats.\n  for (let i = 0; i < beats.length - 1; i++) {\n    const first = beats[i]\n    const second = beats[i + 1]\n\n    const distance = second - first\n    distances[i] = distance\n  }\n\n  return distances\n}\n\nfunction calculateOffset (beats: number[], period: number): number {\n  if (period === 0) {\n    return 0\n  }\n\n  const offsetsWithOutliers = sortNumerically(beats.map(beat => beat % period))\n  const offsets = removeOutliers(offsetsWithOutliers)\n\n  const averageOffset = offsets.reduce((accu, next) => accu + next, 0) / offsets.length\n  return averageOffset / period\n}\n\nfunction removeOutliers (values: number[], denominator = 4, numerator = 1): number[] {\n  const highestIndex = values.length\n  const first = Math.floor((highestIndex / denominator) * numerator)\n  const last = Math.ceil((highestIndex / denominator) * (denominator - numerator))\n  return values.slice(first, last)\n}\n\nfunction sortNumerically (values: number[]): number[] {\n  return values.sort((a, b) => a - b)\n}\n","\nimport { computed, defineComponent, PropType, reactive, ref, toRef, watch } from 'vue'\n\nimport NumberInput from '@/components/number-input.vue'\nimport SliderInput from '@/components/slider-input.vue'\n\nimport { BeatMeter, periodFromBpm } from '@/logic/beatMeter'\n\nexport default defineComponent({\n  components: {\n    NumberInput,\n    SliderInput\n  },\n  props: {\n    customBpm: {\n      type: Number,\n      required: true\n    },\n    customOffset: {\n      type: Number,\n      required: true\n    },\n    currentTimeDisplay: {\n      type: Number,\n      required: true,\n    },\n    getCurrentTime: {\n      type: Function as PropType<() => DOMHighResTimeStamp>,\n      required: true\n    }\n  },\n  emits: [\n    'update:bpm',\n    'update:offset',\n    'start-play'\n  ],\n  setup (props, ctx) {\n    const beatInput = ref('custom')\n    const customBpm = ref(props.customBpm)\n    const customOffset = ref(props.customOffset)\n    const customOffsetPercent = computed({\n      get: () => {\n        return customOffset.value * 100\n      },\n      set: (newOffsetPercent: number) => {\n        customOffset.value = newOffsetPercent / 100\n      }\n    })\n\n    watch(toRef(props, 'customBpm'), newPropBpm => {\n      if (newPropBpm !== customBpm.value) {\n        customBpm.value = newPropBpm\n      }\n    })\n    watch(toRef(props, 'customOffset'), newPropOffset => {\n      if (newPropOffset !== customOffset.value) {\n        customOffset.value = newPropOffset\n      }\n    })\n    watch([customBpm, customOffset], () => {\n      beatInput.value = 'custom'\n    })\n    \n    const beatMeter = reactive(new BeatMeter())\n    // We cannot watch the beatMeter, because tapping a button might not change the beat settings,\n    // and then the watch hook will not be triggered.\n    // Instead we react on all the button presses in this section.\n\n    const period = computed(() => {\n      if (beatInput.value === 'meter') {\n        return beatMeter.period\n      } else {\n        return periodFromBpm(customBpm.value)\n      }\n    })\n    const bpm = computed(() => {\n      if (beatInput.value === 'meter') {\n        return beatMeter.bpm\n      } else {\n        return customBpm.value\n      }\n    })\n    const offset = computed(() => {\n      if (beatInput.value === 'meter') {\n        return beatMeter.offset\n      } else {\n        return customOffset.value\n      }\n    })\n\n    watch(bpm, (newBpm) => ctx.emit('update:bpm', newBpm))\n    watch(offset, (newOffset) => ctx.emit('update:offset', newOffset))\n\n    const clap = computed(() => {\n      const offsetSeconds = offset.value * period.value\n      const beatPhase = (props.currentTimeDisplay - offsetSeconds) % period.value\n      // Only clap for 25 % of the beat.\n      return (beatPhase / period.value) < 0.25\n    })\n    const beatIndicator = computed(() => {\n      if (clap.value) {\n        return '👏'\n      } else {\n        return '👐'\n      }\n    })\n\n    const meterBpmDisplay = computed(() => beatMeter.bpm.toFixed(1))\n    const meterOffsetDisplay = computed(() => `${(beatMeter.offset * 100).toFixed(0)} %`)\n\n    const bpmDisplay = computed(() => bpm.value.toFixed(1))\n    const offsetDisplay = computed(() => {\n      const offsetPercent = offset.value * 100\n      return `${offsetPercent.toFixed(0)} %`\n    })\n\n    return {\n      customBpm,\n      customOffset,\n      customOffsetPercent,\n      meterBpmDisplay,\n      meterOffsetDisplay,\n      bpmDisplay,\n      offsetDisplay,\n      beatMeter,\n      beatIndicator,\n      beatInput,\n    }\n  },\n  methods: {\n    tappedBeat () {\n      this.$emit('start-play')\n      this.beatMeter.addBeats(this.getCurrentTime())\n\n      if (!this.beatMeter.needsMoreBeats) {\n        this.beatInput = 'meter'\n      }\n    },\n    resetClicked () {\n      this.beatMeter.reset()\n      this.beatInput = 'custom'      \n    },\n  }\n})\n","import { render } from \"./beat-settings.vue?vue&type=template&id=27220108&scoped=true&bindings={}\"\nimport script from \"./beat-settings.vue?vue&type=script&lang=ts\"\nexport * from \"./beat-settings.vue?vue&type=script&lang=ts\"\n\nimport \"./beat-settings.vue?vue&type=style&index=0&id=27220108&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-27220108\"\n\nexport default script","export class Range {\n    private start_: number;\n    private duration_: number;\n\n    constructor (\n      start: number,\n      duration: number\n    ) {\n      this.start_ = Math.max(0, start)\n      this.duration_ = Math.max(0, duration)\n    }\n\n    public static fromStartAndEnd (start: number, end: number): Range | null {\n      if (start < end) {\n        const duration = end - start\n        return new Range(start, duration)\n      } else {\n        return null\n      }\n    }\n\n    public get start () {\n      return this.start_\n    }\n\n    public set start (newStart: number) {\n      this.start_ = this.sanitizeInput(newStart, this.start)\n    }\n\n    public get duration () {\n      return this.duration_\n    }\n\n    public set duration (newDuration: number) {\n      this.duration_ = this.sanitizeInput(newDuration, this.duration)\n    }\n\n    public get end () {\n      return this.start + this.duration\n    }\n\n    public set end (newEnd: number) {\n      const newDuration = newEnd - this.start\n      if (newDuration >= 0) {\n        this.duration = newDuration\n      } else {\n        this.start = this.start + newDuration // newDuration is negative.\n        this.duration = 0\n      }\n    }\n\n    private sanitizeInput (newValue: number, oldValue: number) {\n      if (!isNaN(newValue)) {\n        return Math.max(0, newValue)\n      } else {\n        return oldValue\n      }\n    }\n}\n","export function timecodeFromSecond (elapsedSeconds: number) {\n  const elapsedMinutes = elapsedSeconds / 60\n  const elapsedHours = elapsedMinutes / 60\n\n  const hours = Math.floor(elapsedHours).toFixed(0).padStart(2, '0')\n  const minutes = Math.floor(elapsedMinutes % 60).toFixed(0).padStart(2, '0')\n  const seconds = Math.floor(elapsedSeconds % 60).toFixed(0).padStart(2, '0')\n  const fractionOfSecond = Math.floor((elapsedSeconds * 100) % 100).toFixed(0).padStart(2, '0')\n\n  const timecode = `${hours}:${minutes}:${seconds}.${fractionOfSecond}`\n  return timecode\n}\n","\nimport { computed, defineComponent, reactive, Ref, ref, watch } from 'vue'\n\nimport VideoPlayer from '@/components/video-player.vue'\nimport BeatSettings from '@/components/beat-settings.vue'\nimport NumberInput from '@/components/number-input.vue'\nimport SliderInput from '@/components/slider-input.vue'\n\nimport { Range } from '@/logic/range'\nimport { timecodeFromSecond } from '@/logic/time'\nimport { BeatMeter, periodFromBpm } from '@/logic/beatMeter'\n\nexport default defineComponent({\n  components: {\n    VideoPlayer,\n    SliderInput,\n    NumberInput,\n    BeatSettings\n  },\n  setup () {\n    const videoFileInput = ref<HTMLInputElement>(null!)\n    const videoFile = ref<File | null>(null)\n\n    const player = ref<typeof VideoPlayer>(null!)\n    const currentTimeDisplay = ref(0)\n    const currentTimeIndicator = computed(() => {\n      return timecodeFromSecond(currentTimeDisplay.value)\n    })\n    const playbackRate = ref(1)\n    const playbackRatePercent = computed({\n      get: () => playbackRate.value * 100,\n      set: newRatePercent => {\n        playbackRate.value = newRatePercent / 100\n      }\n    })\n\n    const bpm = ref(120)\n    const period = computed(() => periodFromBpm(bpm.value))\n    const offset = ref(0)\n    const bar = computed(() => {\n      if (period.value > 0) {\n        const offsetSeconds = offset.value * period.value\n        return Math.floor((currentTimeDisplay.value - offsetSeconds) / period.value)\n      } else {\n        return 0\n      }\n    })\n    const customBpm = ref(bpm.value)\n    const customOffset = ref(offset.value)\n\n    const saveSettingsForFile = (file: File, settings: { bpm: number, offset: number }) => {\n      localStorage.setItem(file.name, JSON.stringify(settings))\n    }\n    const loadSettingsForFile = (file: File): { bpm: number, offset: number } | null => {\n      const stored = localStorage.getItem(file.name)\n      if (stored !== null) {\n        return JSON.parse(stored)\n      } else {\n        return null\n      }\n    }\n    watch([bpm, offset], ([newBpm, newOffset]) => {\n      if (videoFile.value !== null) {\n        saveSettingsForFile(videoFile.value, { bpm: newBpm, offset: newOffset })\n      }\n    })\n    watch(videoFile, (newFile) => {\n      if (newFile !== null) {\n        const stored =loadSettingsForFile(newFile)\n        if (stored !== null) {\n          customBpm.value = stored.bpm\n          customOffset.value = stored.offset\n        }\n      }\n    })\n\n    const range = reactive(new Range(0, 1))\n    const isLooping = ref(false)\n    const loopButtonText = computed(() => {\n      if (!isLooping.value) {\n        return 'Start loop'\n      } else {\n        return 'Stop loop'\n      }\n    })\n\n    const playLoopStart = () => {\n      const startInSeconds = secondFromBar(range.start, period.value, offset.value)\n      player.value.seekToSecond(startInSeconds)\n      player.value.play()\n    }\n    watch([isLooping, currentTimeDisplay, range] as [Ref<boolean>, Ref<DOMHighResTimeStamp>, Range], ([nowIsLooping, nowCurrentTimeDisplay, currentRange]) => {\n      // When seeking to a time, the player might not be able to hit that time exactly and may choose a slightly earlier time.\n      // To prevent that we get stuck in a loop, we do not restart the loop if we are very close to the start time.\n      const tolerance = 0.1\n      const startTime = secondFromBar(currentRange.start, period.value, offset.value) - tolerance\n      const endTime = secondFromBar(currentRange.end, period.value, offset.value)\n      \n      const insideOfLoop = startTime < nowCurrentTimeDisplay && nowCurrentTimeDisplay < endTime\n      if (nowIsLooping && !insideOfLoop) {\n        playLoopStart()\n      }\n    })\n\n    return {\n      videoFileInput,\n      videoFile,\n      player,\n      currentTimeDisplay,\n      currentTimeIndicator,\n      playbackRate,\n      playbackRatePercent,\n      bpm,\n      period,\n      offset,\n      customBpm,\n      customOffset,\n      bar,\n      isLooping,\n      range,\n      loopButtonText\n    }\n  },\n  methods: {\n    videoFileSelected () {\n      const files = this.videoFileInput.files\n      if (files === null || files.length === 0) {\n        return\n      }\n\n      const newFile = files[0]\n      if (newFile != null) {\n        this.videoFile = newFile\n      }\n    },\n    getCurrentTime () {\n      if (this.player !== null) {\n        return this.player.getCurrentTime()\n      } else {\n        return 0\n      }\n    },\n    toggleLoop () {\n      if (!this.isLooping) {\n        this.startLoop()\n      } else {\n        this.stopLoop()\n      }\n    },\n    startLoop () {\n      this.isLooping = true\n    },\n    stopLoop () {\n      this.isLooping = false\n    },\n    videoPaused () {\n      this.stopLoop()\n    },\n    loopStartToNowClicked () {\n      this.range.start = this.bar\n    },\n    loopEndToNowClicked () {\n      this.range.end = this.bar\n    },\n  }\n})\n\nfunction secondFromBar(bar: number, period: number, offset: number): number {\n  const offsetSeconds = offset * period\n  return bar * period + offsetSeconds\n}\n","import { render } from \"./Loopbar.vue?vue&type=template&id=f664685e&scoped=true&bindings={}\"\nimport script from \"./Loopbar.vue?vue&type=script&lang=ts\"\nexport * from \"./Loopbar.vue?vue&type=script&lang=ts\"\n\nimport \"./Loopbar.vue?vue&type=style&index=0&id=f664685e&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-f664685e\"\n\nexport default script","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router'\nimport Loopbar from '../views/Loopbar.vue'\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'Loopbar',\n    component: Loopbar\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nexport default router\n","import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\nimport router from './router'\nimport store from './store'\n\ncreateApp(App).use(store).use(router).mount('#app')\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./number-input.vue?vue&type=style&index=0&id=4ad62136&scoped=true&lang=scss\""],"sourceRoot":""}